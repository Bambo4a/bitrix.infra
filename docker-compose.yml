version: '2'

services:
    certbot:
        image: certbot/certbot
        hostname: certbot
        container_name: certbot
        restart: unless-stopped
        volumes:
            - ./private/letsencrypt:/etc/letsencrypt
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 10d & wait $${!}; done;'"

    nginx:
        build: ./config/nginx
        hostname: nginx
        container_name: nginx
        image: paskal/nginx-pagespeed:latest
        restart: unless-stopped
        depends_on:
            - adminer
            - php
        volumes:
            - ./web/dev.favor-group.ru/public_html:/web/dev.favor-group.ru
            - ./web/favor-group.ru/public_html:/web/favor-group.ru
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./config/nginx/bitrix.conf:/etc/nginx/bitrix.conf:ro
            - ./config/nginx/server_name.conf:/etc/nginx/server_name.conf:ro
            - ./config/nginx/conf.d/:/etc/nginx/conf.d/:ro
            - ./private/letsencrypt:/etc/nginx/letsencrypt:ro
            - /tmp/favor-logs/nginx/:/var/log/nginx/
            - /tmp/favor-logs/pagespeed/:/var/log/pagespeed/
        ports:
            #- "80:80"
            #- "443:443"
            - "9080:80"
            - "9443:443"
        environment:
            - TZ=Europe/Moscow

    php:
        build: ./config/php-fpm
        image: paskal/bitrix-php:latest
        hostname: php
        container_name: php
        restart: always
        expose:
            - "9000"
        volumes:
            - ./web/dev.favor-group.ru/public_html:/web/dev.favor-group.ru
            - ./web/favor-group.ru/public_html:/web/favor-group.ru
            - ./private/msmtprc:/etc/msmtprc
            - /tmp/favor-logs/php:/var/log/php
            - ./config/php-fpm/90-php.ini:/etc/php/7.4/fpm/conf.d/90-php.ini
            - ./config/php-fpm/90-php.ini:/etc/php/7.4/cli/conf.d/90-php.ini
        depends_on:
            - percona-server
            - memcached

    percona-server:
        image: percona/percona-server:8.0
        hostname: percona-server
        container_name: percona-server
        restart: always
        # MYSQL_ROOT_PASSWORD, MYSQL_USER, MYSQL_PASSWORD
        env_file: private/environment/percona.env
        expose:
            - "3306"
        # TODO: remove after migration of app into docker
        ports:
            - "3306:3306"
        volumes:
            - ./config/percona/favor-group.cnf:/etc/my.cnf.d/favor-group.cnf
            # Data persistence
            - ./private/percona-data:/var/lib/mysql
        environment:
            MYSQL_DATABASE: admin_favorgroup
            TZ: Europe/Moscow
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE

    memcached:
        image: memcached:1-alpine
        hostname: memcached
        container_name: memcached
        expose:
            - "11211"
        ports:
            - "11211:11211"
        volumes:
            - /tmp/favor-logs/memcached:/var/log/memcached
            - ./private/memcached-data:/var/lib/memcached

    adminer:
        image: adminer
        hostname: adminer
        container_name: adminer
        restart: always
        depends_on:
            - percona-server
        expose:
            - "8080"
        environment:
            ADMINER_DEFAULT_SERVER: percona-server

    # Monitoring

    ## Percona Monitoring and Management client
    pmm-client:
        image: perconalab/pmm-client:2
        hostname: favor-group.ru
        container_name: pmm-client
        depends_on:
            - percona-server
        volumes:
            - ./private/pmm/pmm-agent.yaml:/etc/pmm-agent.yaml
        ports:
            - "42000:42000"
            - "42001:42001"

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: always
        environment:
            - PMM_AGENT_CONFIG_FILE=/etc/pmm-agent.yaml

    ## Zabbix Agent 2
    zabbix-agent:
        image: zabbix/zabbix-agent2:latest
        container_name: zabbix-agent
        restart: always
        privileged: true
        depends_on:
            - percona-server
            - nginx
        # temporary, remove after moving from Debian to Ubuntu where it would be possible
        # to set proper permissions for container user for /var/run/docker.sock
        # user: root

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        volumes:
            # this is needed in order to monitor docker
            # to make it work you need to create user "zabbix" with id 1997 on the host system,
            # and make sure it has enough permissions to read /var/run/docker.sock
            - /var/run/docker.sock:/var/run/docker.sock

        environment:
            - TZ=Europe/Moscow
            - ZBX_HOSTNAME=favor-group.ru.docker
            - ZBX_SERVER_HOST=zabbix.terrty.net,46.101.10.22
