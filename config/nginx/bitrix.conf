ssl_certificate      /etc/nginx/letsencrypt/live/favor-group.ru/fullchain.pem;
ssl_certificate_key  /etc/nginx/letsencrypt/live/favor-group.ru/privkey.pem;
ssl_trusted_certificate /etc/nginx/letsencrypt/live/favor-group.ru/chain.pem;

# composite enablement file
set $composite_enabled  "${docroot}/bitrix/html_pages/.enabled";
# if test pass through general tests:
set $use_composite_cache "";
# global site test, the same for all sites on the server
if ($is_global_composite = 1) {set $use_composite_cache "A";}
# personal site tests, generated by site config
if ($is_site_composite = 1) {set $use_composite_cache "${use_composite_cache}B";}

# memcached common options
memcached_connect_timeout 1s;
memcached_read_timeout 1s;
memcached_send_timeout 1s;
memcached_gzip_flag 65536;
set $memcached_key "/${host}${composite_key}/index@${args}.html";

# bitrix recommendation, respect server's mime-type and don't try to guess it
add_header X-Content-Type-Options nosniff;

# bitrix recommendation for stricter security,
# doesn't allow to show site in iframe
add_header X-Frame-Options SAMEORIGIN;

charset utf-8;
index index.php;
error_page 404 /404.php;

if (!-e $request_filename) {
    rewrite  ^(.*)$  /bitrix/urlrewrite.php last;
}

# remove multiple slashes
# duplicated slashes will work and won't be rewritten, fixing it in this configuration is tricky
rewrite ^([^.]*?\/)\/+(.*)$ $1$2 permanent;

# redirect index.php to page without it
if ($request_uri ~* "^(.*/)index\.php$") {
    return 301 $1;
}

# main location with processing composite
location / {
    if (-f $composite_enabled) { set $use_composite_cache "${use_composite_cache}C"; }
    default_type text/html;
    # use memcached for keys
    if ($use_composite_cache = "ABC") {
        add_header X-Bitrix-Composite "Nginx (memcached)";
        memcached_pass memcached:11211;
    }
    try_files $uri $uri/ @bitrix;
}

location @bitrix {
    fastcgi_pass php-upstream;
    # common fastcgi options
    include fastcgi.conf;
    fastcgi_param SCRIPT_FILENAME $document_root/bitrix/urlrewrite.php;
    # prevent "upstream sent too big header while reading response header from upstream" errors
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
}

location = /restore.php {
    fastcgi_pass php-upstream;
    # common fastcgi options
    include fastcgi.conf;

    fastcgi_index index.php;
    fastcgi_send_timeout 21600;
    fastcgi_read_timeout 21600;
    client_body_buffer_size 1024m;
    client_max_body_size 1024m;
}

location = /favicon.png {
    log_not_found off;
    access_log off;
}

location = /robots.txt {
    log_not_found off;
    access_log off;
    # aspro.next robots.txt rewrite
    rewrite "robots.txt" /aspro_regions/robots/robots_$host.txt break;
}

location ~ (/\.ht|/\.git|/\.gitignore|\.settings\.php|/vendor/|/composer|/bitrix/backup|/bitrix/updates|/bitrix/modules|/bitrix/php_interface|/bitrix/stack_cache|/bitrix/managed_cache|/bitrix/html_pages/\.|/upload/1c_exchange|local/modules|local/php_interface|/logs/) {
    deny all;
}

# Internal location
location ^~ /upload/support/not_image	{ internal; }

# Cache location: composite and general site
location ~* @.*\.html$ {
  internal;
  # disable browser cache, php manage file
  expires -1y;
  add_header X-Bitrix-Composite "Nginx (file)";
}

# aspro.next sitemap rewrite
location ~ ^/sitemap.*\.xml$ {
    rewrite "/(sitemap.*)\.xml" /aspro_regions/sitemap/$1_$host.xml break;
}

location ~* ^.+\.(xml|txt|jpeg|jpg|png|gif|bmp|ico|svg|tif|tiff|css|js|htm|html|ttf|otf|webp|woff2?|csv|rtf|doc|docx|xls|xlsx|ppt|pptx|odf|odp|ods|odt|pdf|psd|ai|eot|eps|ps|zip|tar|tgz|gz|rar|bz2?|7z|aac|m4a|mp3|mp4|ogg|wav|wma|3gp|avi|flv|m4v|mkv|mov|mpe?g|wmv|exe|iso|dmg|swf|webmanifest)$ {
    log_not_found off;
    access_log off;
    expires max;
    add_header Cache-Control public;
    # re-add security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
}

# Disable access for non-static assets in cache location
location ~* ^/bitrix/cache { deny all; }

location ~ /upload/ {
    client_body_buffer_size 1024m;
    client_max_body_size 1024m;
}

location ~ \.php$ {
    if (!-f $request_filename) {
        rewrite  ^(.*)/index.php$  $1/ redirect;
    }
    fastcgi_pass php-upstream;
    # common fastcgi options
    include fastcgi.conf;
    # prevent "upstream sent too big header while reading response header from upstream" errors
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;

    fastcgi_index index.php;
    fastcgi_send_timeout 21600;
    fastcgi_read_timeout 21600;
}

